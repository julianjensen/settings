<toolSet name="External Tools">
  <tool name="Test services" description="Test all the services in one command" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="false" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$USER_HOME$/code/rest-api/server/scripts/setup" />
      <option name="PARAMETERS" value="test ../services ." />
      <option name="WORKING_DIRECTORY" value="C:/Users/Julian/code/rest-api/server" />
    </exec>
  </tool>
  <tool name="Generate file watchers for services" description="Generate file watchers for services. In another terminal windows type &quot;gulp&quot; to start syncing after you run this command. If watching, restart gulp." showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="false" disabled="false" useConsole="false" showConsoleOnStdOut="false" showConsoleOnStdErr="true" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$USER_HOME$/code/rest-api/server/scripts/setup" />
      <option name="PARAMETERS" value="config ../services ." />
      <option name="WORKING_DIRECTORY" value="C:/Users/Julian/code/rest-api/server" />
    </exec>
  </tool>
  <tool name="Publish all services" description="Bump the patch version number, run all tests, then publish all services. Make sure you run the tests first, just in case." showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$USER_HOME$/code/rest-api/server/scripts/setup" />
      <option name="PARAMETERS" value="publish ../services ." />
      <option name="WORKING_DIRECTORY" value="C:/Users/Julian/code/rest-api/server" />
    </exec>
  </tool>
  <tool name="Initialize all services" description="Runs npm install inside each service project directory." showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$USER_HOME$/code/rest-api/server/scripts/setup" />
      <option name="PARAMETERS" value="init ../services ." />
      <option name="WORKING_DIRECTORY" value="C:/Users/Julian/code/rest-api/server" />
    </exec>
  </tool>
  <tool name="Pull latest version" description="Pull the latest version from git" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$USER_HOME$/code/rest-api/server/scripts/setup" />
      <option name="PARAMETERS" value="update ../services ." />
      <option name="WORKING_DIRECTORY" value="C:/Users/Julian/code/rest-api/server" />
    </exec>
  </tool>
  <tool name="Install services" description="Installs all the services for the server without adding them to package.json" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$USER_HOME$/code/rest-api/server/scripts/setup" />
      <option name="PARAMETERS" value="install ../services ." />
      <option name="WORKING_DIRECTORY" value="C:/Users/Julian/code/rest-api/server" />
    </exec>
  </tool>
  <tool name="touch" description="Update the timestamp on a file" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="false" disabled="false" useConsole="false" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="/usr/bin/touch" />
      <option name="PARAMETERS" value="$FilePath$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
</toolSet>